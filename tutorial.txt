There are several parts where different steps must be taken depending on your OS.

Create the directory for your projects. Below is a suggestion for directory structure starting in your user folder. Creatre a projects folder inside your user folder:
Example: (user)/projects/

Download Python 3.8 (Make sure to select create PATH variable)

*** Mac users: open terminal
*** Windows users: 
Download and install GIT BASH terminal from 
https://github.com/git-for-windows/git/releases/download/v2.24.0.windows.2/Git-2.24.0.2-64-bit.exe

configure your git settings:
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR EMAIL"

update pip (a commandline based installation tool):
py -m pip install --upgrade pip

Navigate to the projects directory using:
cd projects/

Clone the current version of the website to your computer:
git clone https://github.com/BHCC-CSX/CSXWebsite.git

Navigate into the newly created project folder:
cd CSXWebsite/

Next we will install virtualenv. This allows you to create a virtual environment for the project and seperate any installed packages for this project from other projects on your computer:
pip install virtualenv

Create and activate a virtual environment (must use name "env" for .gitignore to function correctly):
py -m venv env
*** windows users *** source env/scripts/activate 
*** mac users: *** source env/bin/activate

Install the required packages (including Django!):
pip install -r requirements.txt

Install google cloud sdk:
https://cloud.google.com/sdk/docs/downloads-versioned-archives

This allows your computer to access the database the same way that the app would from the server that it is hosted on. This is for testing only. The proxy must be ran from the gcloud shell and kept running for the entire time you are testing the app

Set cloud credentials:
gcloud auth login


Start sql proxy:

cloud_sql_proxy -instances=bhcc-csx:us-east1:csxdb-instance=tcp:3306

Or for Mac:
./cloud_sql_proxy -instances=bhcc-csx:us-east1:csxdb-instance=tcp:3306

You should now be able to deploy the website locally by running the following command:
py manage.py runserver
